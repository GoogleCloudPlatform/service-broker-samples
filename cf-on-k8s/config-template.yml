# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is a terraform template

env:

  # This fixes a DNS route issue with SCF.
  # The dot at the end makes certain routes reach the numDot DNS logic
  KUBERNETES_CLUSTER_DOMAIN: cluster.local.

  ENABLE_OPI_STAGING: true
  DOMAIN: "${DOMAIN}"
  UAA_HOST: "uaa.${DOMAIN}"
  UAA_PORT: 2793

kube:
  auth: rbac
  storage_class:
    # I have not run into any mysql issues *yet*
    # So I haven't switched the storage class
    persistent: "standard"
    shared: "standard"

secrets:
  CLUSTER_ADMIN_PASSWORD: "${CLUSTER_ADMIN_PASSWORD}"
  UAA_ADMIN_CLIENT_SECRET: "${UAA_ADMIN_CLIENT_SECRET}"
  BLOBSTORE_PASSWORD: "${BLOBSTORE_PASSWORD}"

# Load balancing because even with the firewall rules,
# ClusterIP services are not exposed.
#
# I could be incorrect, but I believe GKE is never going to expose ClusterIP services.
services:
  loadbalanced: true

eirini:
  env:
    DOMAIN: "${DOMAIN}"
    KUBERNETES_CLUSTER_DOMAIN: cluster.local.

  services:
    loadbalanced: true

  opi:
    use_registry_ingress: false
    # Enable if use_registry_ingress is set to 'true'
    # Note that this is just the domain. The helm chart adds 'eirini.', unlike UAA_HOST
    ingress_endpoint: "${DOMAIN}"
    namespace: apps

  secrets:
    BITS_SERVICE_SECRET: "${BITS_SERVICE_SECRET}"
    BITS_SERVICE_SIGNING_USER_PASSWORD: "${BITS_SERVICE_SIGNING_USER_PASSWORD}"
    BLOBSTORE_PASSWORD: "${BLOBSTORE_PASSWORD}"
